<!--
gvGeoportal is sponsored by the General Directorate for Information
Technologies (DGTI) of the Regional Ministry of Finance and Public
Administration of the Generalitat Valenciana (Valencian Community,
Spain), managed by gvSIG Association and led by DISID Corporation.

Copyright (C) 2016 DGTI - Generalitat Valenciana

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/jquery/util"
	xmlns:table="urn:jsptagdir:/WEB-INF/tags/datatables"
	xmlns:spring="http://www.springframework.org/tags"
	xmlns:form="http://www.springframework.org/tags/form"
	xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:gvnixddt="http://www.gvnix.org/gvnix-datatables"
	xmlns:datatables="http://github.com/dandelion/datatables"
	xmlns:sec="http://www.springframework.org/security/tags" version="2.0">
	<jsp:directive.tag import="java.util.Random" />
	<jsp:directive.tag
		import="org.springframework.web.servlet.support.RequestContext" />
	<jsp:directive.tag
		import="org.springframework.web.servlet.tags.RequestContextAwareTag" />
	<jsp:directive.tag import="java.util.ArrayList" />
	<jsp:output omit-xml-declaration="yes" />

	<!-- ====================================== -->
	<!-- ====================================== -->
	<!-- Roo parameters -->
	<!-- ====================================== -->
	<!-- ====================================== -->

	<jsp:directive.attribute name="id" type="java.lang.String"
		required="true" rtexprvalue="true"
		description="The identifier for this tag (do not change!)" />
	<jsp:directive.attribute name="data" type="java.util.Collection"
		required="true" rtexprvalue="true"
		description="The collection to be displayed in the table" />
	<jsp:directive.attribute name="path" type="java.lang.String"
		required="true" rtexprvalue="true" description="Specify the URL path" />
	<jsp:directive.attribute name="typeIdFieldName" type="java.lang.String"
		required="false" rtexprvalue="true"
		description="The identifier field name for the type (defaults to 'id')" />
	<jsp:directive.attribute name="create" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Include 'create' link into table (default true)" />
	<jsp:directive.attribute name="update" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Include 'update' link into table (default true)" />
	<jsp:directive.attribute name="delete" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Include 'delete' link into table (default true)" />
	<jsp:directive.attribute name="render" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
	<jsp:directive.attribute name="z" type="java.lang.String"
		required="false"
		description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />
	<jsp:directive.attribute name="actionHeaderCssStyle"
		type="java.lang.String" required="false"
		description="Custom css-style for action columns header" />

	<!-- selection -->
	<!-- This options now are configured base on datatablesConfig -->
	<jsp:directive.attribute name="selection" type="java.lang.Boolean"
		required="false"
		description="Enable selection. If has batch support is true by default. Selection only works with batch installed." />
	<!--<jsp:directive.attribute name="selectionMultiRow" type="java.lang.Boolean" required="false" description="Enable selection on multiple rows" />
  <jsp:directive.attribute name="selectionByCheck" type="java.lang.Boolean" required="false" description="Use checkbox to select" />
   -->
	<jsp:directive.attribute name="isRadioButton" rtexprvalue="false"
		type="java.lang.Boolean" required="false"
		description="If only one selection is allowed" />
	<jsp:directive.attribute name="selectionCheckCssClass"
		type="java.lang.String" required="false"
		description="Css class for selection checkbox" />
	<jsp:directive.attribute name="selectionSelectedCssClass"
		type="java.lang.String" required="false"
		description="Css class for selected rows [default: 'row_selected']" />
	<jsp:directive.attribute name="selectionNotSelectedCssClass"
		type="java.lang.String" required="false"
		description="Css class for not-selected rows" />
	<jsp:directive.attribute name="selectionInfoLabel"
		type="java.lang.String" required="false"
		description="Label to use for selection information (default 'datatables_selection_info')" />

	<!-- inline editing -->
	<jsp:directive.attribute name="editingInfoLabel"
		type="java.lang.String" required="false"
		description="Label to use for inline-editing information (default 'datatables_editing_info')" />

	<!-- show button -->
	<jsp:directive.attribute name="show" type="java.lang.Boolean"
		required="false" rtexprvalue="true"
		description="Include 'show' link into table (default true)" />

	<!-- ====================================== -->
	<!-- ====================================== -->
	<!-- Datatables parameters -->
	<!-- ====================================== -->
	<!-- ====================================== -->

	<jsp:directive.attribute name="url" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Web service URL used to populate the table.  (Either data or url attribute is required)" />
	<jsp:directive.attribute name="appear" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(block|fadein[,duration]) Display mode used when the table has finished loading and must appear in the page.  A duration can be set (in milliseconds) if the display mode is set to 'fadein'. (Default : 'block')" />
	<jsp:directive.attribute name="cdn" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(true|false) Enable the DataTables source files to be loaded from the Microsoft CDN (Content Delivery Framework) preventing you from hosting the files yourself. (Default : false)" />
	<jsp:directive.attribute name="cssStyle" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="CSS style applied on the HTML table. (HTML style attribute)" />
	<jsp:directive.attribute name="cssClass" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="CSS class(es) applied on the HTML table. (HTML class attribute)" />
	<jsp:directive.attribute name="rowIdBase" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Useful if you want each row has a DOM id. This attribute is evaluated as a property of the current iterated bean. (Only if DOM datasource)" />
	<jsp:directive.attribute name="rowIdPrefix" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="String which is prepended to the rowIdBase attribute, in order to build row id. (HTML id attribute)" />
	<jsp:directive.attribute name="rowIdSufix" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="String which is appended to the rowIdBase attribute, in order to build row id. (HTML id attribute)" />
	<jsp:directive.attribute name="deferRender" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Defer the creation of the table elements for each row until they are needed for a draw.  (Default : false, see http://datatables.net/ref#bDeferRender)" />
	<jsp:directive.attribute name="dom" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Allows you to specify exactly where in the DOM you want DataTables to inject the various controls it adds to the page (for example you might want the pagination controls at the top of the table). DIV elements (with or without a custom class) can also be added to aid styling." />

	<!-- ====================================== -->
	<!-- Basic features -->
	<!-- ====================================== -->

	<jsp:directive.attribute name="info" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable the table information display. This shows information about the data that is currently visible on the page, including information about filtered data if that action is being performed.  (Default : true, see http://datatables.net/ref#bInfo)" />
	<jsp:directive.attribute name="paginate" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable pagination. Only works if list mode is set. (Default : true, see http://datatables.net/ref#bPaginate)" />
	<jsp:directive.attribute name="lengthChange" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) If paginate is enabled, allows the end user to select the size of a formatted page from a select menu (sizes are 10, 25, 50 and 100). (Default : true, see http://datatables.net/ref#bLengthChange)" />
	<jsp:directive.attribute name="paginationType" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(two_button|full_numbers) Choice between the two different built-in pagination interaction methods ('two_button' or 'full_numbers') which present different page controls to the end user. Default: full_numbers (More info: http://datatables.net/ref#sPaginationType)" />
	<jsp:directive.attribute name="filter" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable filtering of data.  (Default : true, see http://datatables.net/ref#bFilter)" />
	<jsp:directive.attribute name="sort" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable sorting of all columns.  Sorting of individual columns can be disabled by the 'sortable' attribute of column tag. (Default : true, see http://datatables.net/ref#bSort)" />
	<jsp:directive.attribute name="autoWidth" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable automatic column width calculation. (Default : true, see http://datatables.net/ref#bAutoWidth)" />

	<jsp:directive.attribute name="processing" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable the display of a 'processing' indicator when the table is being processed (e.g. a sort). This is particularly useful for tables with large amounts of data where it can take a noticeable amount of time to sort the entries. (Default : false, see http://datatables.net/ref#bProcessing)" />
	<jsp:directive.attribute name="serverData" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Allows you to override the default function which obtains the data from the server ($.getJSON) so something more suitable for your application" />
	<jsp:directive.attribute name="serverParams" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Allows you to send extra information to the server when using AJAX source" />
	<jsp:directive.attribute name="pipelining" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="Enable pipelining data for paging when server-side processing is enabled" />
	<jsp:directive.attribute name="pipeSize" type="java.lang.Integer"
		rtexprvalue="true" required="false"
		description="Pipe size used when pipelining is enabled, ie times that the user can page before a request must be made of the server. (Default : 5)" />
	<jsp:directive.attribute name="stateSave" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable state saving.  When enabled a cookie will be used to save table display information such as pagination information, display length, filtering and sorting. As such when the end user reloads the page the display display will match what thy had previously set up. (Default : true, see http://datatables.net/ref#bStateSave)" />
	<jsp:directive.attribute name="export" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(HTML|PDF|CSV|XLS|XLSX|XML) Comma-separated list of export types (Default : PDF,XLS,CSV). 'false' to disable it." />
	<jsp:directive.attribute name="exportLinks" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(TOP_LEFT|TOP_MIDDLE|TOP_RIGHT|BOTTOM_LEFT|BOTTOM_MIDDLE|BOTTOM_RIGHT) Comma-separated list of positions where the export links will be generated (Default : TOP_RIGHT)" />
	<jsp:directive.attribute name="jqueryUI" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(true|false) Enable jQuery UI ThemeRoller support (Default : false, see http://datatables.net/ref#bJQueryUI)" />
	<jsp:directive.attribute name="footer" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(header) Choose if you want to have the footer appear.  (Default : none)" />
	<jsp:directive.attribute name="theme" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Name of a theme to activate for the current table.  (Default : none)" />
	<jsp:directive.attribute name="themeOption" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Name of an option to activate in relation to the current activated theme." />
	<jsp:directive.attribute name="lengthMenu" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Specify the entries in the length drop down menu that DataTables show when pagination is enabled." />
	<jsp:directive.attribute name="cssStripes" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Comma-separated list of CSS classes that should be applied to displayed rows. This array may be of any length, and DataTables will apply each class sequentially, looping when required." />
	<jsp:directive.attribute name="displayLength" type="java.lang.Integer"
		rtexprvalue="true" required="false"
		description="Number of rows to display on a single page when using pagination." />
	<jsp:directive.attribute name="ext" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Comma-separated names of custom extensions to register in the current table." />
	<jsp:directive.attribute name="confGroup" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Name of the configuration group to activate for the current table." />
	<jsp:directive.attribute name="filterPlaceholder"
		type="java.lang.String" rtexprvalue="true" required="false"
		description="Placeholder used to hold the individual column filtering elements." />

	<!-- ====================================== -->
	<!-- Extra features -->
	<!-- ====================================== -->

	<!-- State Save And Load -->
	<jsp:directive.attribute name="statePrefix" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Prefix to add on localStorage to identify the table" />

	<!-- FixedHeader -->
	<jsp:directive.attribute name="fixedHeader" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable the DataTables FixedHeader plugin. (Default : false) (See : http://datatables.net/extras/fixedheader/)" />
	<jsp:directive.attribute name="fixedPosition" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="(top|bottom|left|right) Respectively fix the header, footer, left column, right column. (Default : top)" />
	<jsp:directive.attribute name="offsetTop" type="java.lang.Integer"
		rtexprvalue="true" required="false"
		description="Offset applied on the top." />

	<!-- Scroller -->
	<jsp:directive.attribute name="scroller" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable the DataTables Scroller plugin. (Default : false) (See : http://datatables.net/extras/scroller/)" />
	<jsp:directive.attribute name="scrollY" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Table's height to display in scrolling mode.  (default : 300px)" />
	<jsp:directive.attribute name="scrollCollapse" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) When vertical (y) scrolling is enabled, DataTables will force the height of the table's viewport to the given height at all times (useful for layout). However, this can look odd when filtering data down to a small data set, and the footer is left 'floating' further down. This parameter (when enabled) will cause DataTables to collapse the table's viewport down when the result set will fit within the given Y height. (default : false)" />
	<jsp:directive.attribute name="scrollX" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="Table's width to display in scrolling mode. (default : '')" />
	<jsp:directive.attribute name="scrollXInner" type="java.lang.String"
		rtexprvalue="true" required="false"
		description="se more width than it might otherwise do when x-scrolling is enabled. (default : '')" />

	<!-- ColReorder -->
	<jsp:directive.attribute name="colReorder" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Enable or disable the DataTables ColReorder plugin. (Default : false) (See : http://datatables.net/extras/colreorder/)" />

	<!-- Filtering options -->
	<jsp:directive.attribute name="filterOnReturn" type="java.lang.Boolean"
		rtexprvalue="true" required="false"
		description="(true|false) Wait until Intro key is pressed to perform a search or filtering. (Default : false)" />
	<jsp:directive.attribute name="filteringDelay" type="java.lang.Integer"
		rtexprvalue="true" required="false"
		description="Milisecons to wait from last key-press event to perform a search or filtering. (Default: 500)" />

	<!-- ========================================================================= -->
	<!-- Authorize features (only work when Spring Security is applied to project) -->
	<!-- ========================================================================= -->
	<jsp:directive.attribute name="rolesAuthorizedShow"
		type="java.lang.String" required="false" rtexprvalue="true"
		description="Comma separated list of user roles allowed to show." />
	<jsp:directive.attribute name="rolesAuthorizedCreate"
		type="java.lang.String" required="false" rtexprvalue="true"
		description="Comma separated list of user roles allowed to create." />
	<jsp:directive.attribute name="rolesAuthorizedUpdate"
		type="java.lang.String" required="false" rtexprvalue="true"
		description="Comma separated list of user roles allowed to update." />
	<jsp:directive.attribute name="rolesAuthorizedDelete"
		type="java.lang.String" required="false" rtexprvalue="true"
		description="Comma separated list of user roles allowed to delete." />

	<!-- ====================== -->
	<!-- Prepare default values -->
	<!-- ====================== -->

	<jsp:useBean id="datatables_javaScript_elements_before"
		class="java.util.LinkedHashMap" scope="request" />
	<jsp:useBean id="datatables_javaScript_elements_after"
		class="java.util.LinkedHashMap" scope="request" />
	<jsp:useBean id="datatables_javaScript_elements_init"
		class="java.util.LinkedHashMap" scope="request" />
	<jsp:useBean id="datatables_callback_elements"
		class="java.util.LinkedHashMap" scope="request" />
	<jsp:useBean id="datatables_export_columns"
		class="java.util.LinkedHashMap" scope="request" />
	<jsp:useBean id="datatables_export_columns_title"
		class="java.util.LinkedHashMap" scope="request" />

  <!-- gvGeoportal - Fixed error with Tomcat 7.0.54 -->
  <c:set var="EMPTY_STRING" value=""/>

	<!-- selection -->
	<c:if
		test="${empty selection and datatablesStandardMode and datatablesHasBatchSupport}">
		<c:set var="selection" value="true" />
	</c:if>

	<c:if
		test="${empty selection and !datatablesStandardMode and !datatablesHasBatchSupport}">
		<c:set var="selection" value="false" />
	</c:if>


	<!-- typeIdFieldName -->
	<c:if test="${empty typeIdFieldName}">
		<c:set var="typeIdFieldName" value="id" />
	</c:if>

	<!-- actionHeaderCssStyle -->
	<c:if test="${empty actionHeaderCssStyle}">
		<c:set var="actionHeaderCssStyle"
			value="color: #ffffff;background: #ffffff;padding: 2px; width : 0px" />
	</c:if>

	<!-- Type Name -->
	<spring:message var="typeName"
		code="menu_item_${fn:toLowerCase(fn:split(id,'_')[fn:length(fn:split(id,'_')) - 1])}_new_label"
		htmlEscape="false" />
	<spring:message
		code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}"
		var="entity_title" htmlEscape="false" />

	<!-- Add random value to datatables identifier to avoid collisions when multiple datatables details -->
	<!-- This datatables identifier is required by list.tagx when show datatables details -->
	<c:if test="${not empty parentId }">
		<c:set value="${parentId}_${id}" var="id" />
	</c:if>
	<c:set value="${id}" var="parentId" scope="request" />

	<c:if test="${empty appear}">
		<c:set var="appear" value="block" />
	</c:if>
	<c:if test="${empty deferRender}">
		<c:set var="deferRender" value="false" />
	</c:if>

	<!-- displayLength -->
	<c:if test="${empty displayLength }">
		<c:set var="displayLength" value="10" />
	</c:if>

	<!-- Require 'datatablesUseAjax' defined in context -->
	<c:set var="serverSide" value="${datatablesUseAjax}" />
	<jsp:scriptlet>if (jspContext.getAttribute("serverSide") == null) {
				throw new IllegalArgumentException(
						"Missing context value for 'datatablesUseAjax'");
			}</jsp:scriptlet>

	<c:if test="${serverSide and empty serverData }">
		<c:set var="serverData" value="doAjaxRequestByPost" />
	</c:if>



	<!-- Ignore baseFilter if serverParams is set -->
	<c:if test="${serverSide and empty serverParams}">

		<!-- Create JS function to include base filters as datatable extra params -->
		<c:if test="${not empty baseFilter}">
			<c:set target="${datatables_javaScript_elements_before}"
				property="getExtraParams">
			function getExtraParams_${id}( aoData ) {
			    <c:forEach items="${baseFilter}" var="entry">
			    aoData.push( {"name": "${entry.key}", "value" : "${entry.value}"});
			    </c:forEach>
			}
		</c:set>
			<c:set var="serverParams" value="getExtraParams_${id}" />
		</c:if>
	</c:if>

	<!-- If data has values Datatables doesn't request server side values, so
       if serverSide is set remove data var to let datatables to call server -->
	<c:if test="${serverSide}">
		<c:remove var="data" />
	</c:if>

	<c:if test="${empty paginationType}">
		<c:set var="paginationType" value="full_numbers" />
	</c:if>

	<c:if test="${empty pipeSize}">
		<c:set var="pipeSize" value="5" />
	</c:if>

	<!-- If empty, display CSV, XLS and PDF export buttons -->
	<c:choose>
		<c:when test="${empty export}">
			<c:set var="export" value="csv,xls,pdf" />
		</c:when>
		<c:when test="${'false' == export}">
			<c:set var="export" value="" />
		</c:when>
		<c:otherwise>
			<c:set var="export" value="${export}" />
		</c:otherwise>
	</c:choose>

	<!-- set row id based on entity id attribute -->
	<c:if test="${(not serverSide) and (empty rowIdBase)}">
		<c:set var="rowIdBase" value="${typeIdFieldName}" />
	</c:if>

	<c:if test="${empty exportLinks}">
		<c:set var="exportLinks" value="top_right" />
	</c:if>

	<c:if test="${empty fixedPosition}">
		<c:set var="fixedPosition" value="top" />
	</c:if>

	<c:if test="${empty offsetTop}">
		<c:set var="offsetTop" value="5" />
	</c:if>

	<c:if test="${empty scrollY}">
		<c:set var="scrollY" value="300px" />
	</c:if>

	<spring:url value="${path}" var="urlPath" />

	<spring:url value="" var="urlParams">
		<spring:param name="form" />
		<c:forEach var="paramAux" items="${param}">
			<spring:param name="${paramAux.key}" value="${paramAux.value}" />
		</c:forEach>
	</spring:url>

	<script type="text/javascript">

	//borramos en la carga el localstorage para que no almacene los checks seleccionados. #17115
	var hashLocation = fnGetHashCode(window.location.pathname);
	var idTable = '${id}';
	var itemLocalStorage = hashLocation + "_gvnixRowSelected-" + idTable;

	localStorage.removeItem(itemLocalStorage);

    var datatablesRedirect = 'datatablesRedirect=' + encodeURIComponent(document.URL);
  </script>

	<!-- Default CRUD -->
	<!-- selection -->
	<!-- enable selection only on standar mode and with batch support -->
	<c:choose>
		<c:when test="${datatablesStandardMode and datatablesHasBatchSupport}">
			<c:set var="selectionMultiRow" value="true" />
			<c:set var="selectionByCheck" value="true" />
		</c:when>
		<c:otherwise>
			<c:set var="selection" value="false" />
			<c:set var="selectionMultiRow" value="false" />
			<c:set var="selectionByCheck" value="false" />
		</c:otherwise>
	</c:choose>

	<!-- When a list of roles is supplied: check if some role is granted and then show create, update and delete controls -->
	<c:set var="authorizedShow" value="true" />
	<c:set var="authorizedCreate" value="true" />
	<c:set var="authorizedUpdate" value="true" />
	<c:set var="authorizedDelete" value="true" />
	<c:if test="${datatablesSecurityApplied}">
		<c:if test="${not empty rolesAuthorizedShow}">
			<sec:authorize var="authorizedShow"
				ifAnyGranted="${rolesAuthorizedShow}" />
		</c:if>
		<c:if test="${not empty rolesAuthorizedCreate}">
			<sec:authorize var="authorizedCreate"
				ifAnyGranted="${rolesAuthorizedCreate}" />
		</c:if>
		<c:if test="${not empty rolesAuthorizedUpdate}">
			<sec:authorize var="authorizedUpdate"
				ifAnyGranted="${rolesAuthorizedUpdate}" />
		</c:if>
		<c:if test="${not empty rolesAuthorizedDelete}">
			<sec:authorize var="authorizedDelete"
				ifAnyGranted="${rolesAuthorizedDelete}" />
		</c:if>
	</c:if>
	<c:if test="${empty show and authorizedShow}">
		<c:set var="show" value="true" />
	</c:if>
	<c:if test="${empty create and authorizedCreate}">
		<c:set var="create" value="true" />
	</c:if>
	<c:if test="${empty update and authorizedUpdate}">
		<c:set var="update" value="true" />
	</c:if>
	<c:if test="${empty delete and authorizedDelete}">
		<c:set var="delete" value="true" />
	</c:if>

	<!-- ================================= -->
	<!-- Datatables settings, handlers ... -->
	<!-- ================================= -->

	<c:choose>
		<c:when test="${not datatablesStandardMode}">
			<!--
     ******* Register views configuration ******
     -->

			<c:set var="columnId" value="${id}" />
			<!-- Change the Id value to avoid problem of restore a configuration from
    cookies which can override this options (per ex. displayLenght) -->
			<c:set var="id" value="${id}__RegisterView" />


			<c:set var="displayLength" value="1" />
			<c:set var="paginate" value="true" />
			<c:set var="paginationType" value="full_numbers" />
			<c:set var="lengthChange" value="false" />
			<c:set var="filter" value="false" />
			<c:set var="export" value="" />
			<c:set var="cssClass" value="registerTable" />
			<c:set var="pipelining" value="false" />
			<jsp:scriptlet>if (!((Boolean) jspContext.getAttribute("serverSide"))
							.booleanValue()) {
						throw new IllegalArgumentException(
								"DOM mode unsupported for Register view mode");
					}</jsp:scriptlet>

			<c:set target="${datatables_javaScript_elements_before}"
				property="evalScripts">
        /*
         * Evaluate Javascript inside TDs.
         * By calling jQuery wrap all script elements in the TD contents
         * will automatically be evaluated.
         */
        function evalScripts( oSettings ) {
          if ( typeof oTable_${id} != 'undefined' ) {
              jQuery('oTable_${id}').find('td').each(function(i) {
                  jQuery(this).wrapInner(jQuery('<div></div>'));
              });
          }
        }
    </c:set>
		</c:when>

		<c:otherwise>

			<!-- ******* Begin inline creation panel ********** -->
			<c:set var="inlineCreating" value="false" />
			<c:if test="${serverSide and datatablesInlineCreating}">
				<c:set var="inlineCreating" value="true" />
			</c:if>
			<c:if test="${inlineCreating}">
				<spring:message code="global_menu_new" var="label"
					arguments="${entity_title}" htmlEscape="false" />
				<div class="tab-content create-div table-responsive"
					id="${id}CreateForm" style="display: none;">
					<h4>${label}</h4>
				</div>
				<c:set var="submit_label">
					<spring:escapeBody javaScriptEscape="true">
						<spring:message code="button_submit" />
					</spring:escapeBody>
				</c:set>
				<spring:url value="/resources/images/datatables/accept.png"
					var="submit_image_url" />
				<c:set target="${datatables_javaScript_elements_init}"
					property="displayCreateForm">
      fnDisplayCreateForm('${id}', '${param['datatablesMappedProperty']}', '${param['datatablesMappedValue']}');
    </c:set>
			</c:if>
			<!-- ******* End inline creation panel ********** -->

			<!--
  *******	Tabular views configuration ******
   -->
			<!-- selection -->
			<c:choose>
				<c:when test="${selection}">
					<c:if test="${empty selectionSelectedCssClass}">
						<c:set var="selectionSelectedCssClass" value="row_selected" />
					</c:if>

					<!-- Show select all button -->
					<c:if test="${selectionMultiRow and !isRadioButton}">
						<c:set var="selection_all_link" value="true" />
						<spring:message var="selection_all_msg" code="selection_all"
							htmlEscape="false" javaScriptEscape="true" />
					</c:if>

					<!-- Show select none button -->
					<spring:message var="selection_none_msg" code="selection_none"
						htmlEscape="false" javaScriptEscape="true" />

					<c:if test="${empty selectionInfoLabel}">
						<c:set var="selectionInfoLabel" value="datatables_selection_info" />
					</c:if>
					<spring:message code="${selectionInfoLabel}" htmlEscape="false"
						var="selection_info_msg" />
					<c:if test="${selectionByCheck}">
						<c:set var="selectionCheckColumnId" value="${id}_select_col" />
						<form id="${selectionCheckColumnId}_form"
							name="${selectionCheckColumnId}_form"></form>
						<c:if test="${empty selectionCheckCssClass}">
							<c:set var="selectionCheckCssClass" value="check_select_row" />
						</c:if>
						<c:if test="${serverSide}">
						    <!-- se anyade comparacion radioButton. #17115-->
							<c:choose>
								<c:when test="${isRadioButton}">

									<!-- Add selection functions to the script element before Datatables element -->
									<c:set target="${datatables_javaScript_elements_before}"
										property="${selectionCheckColumnId}">
	        function ${selectionCheckColumnId}(data, type, full) {
                            var result = '<input type="checkbox"
											class="${selectionCheckCssClass}"
											form="${selectionCheckColumnId}_form"
											onclick="deleteCheckedRows(this)" />';
                return result;
		    }
	     	</c:set>
								</c:when>
								<c:otherwise>
									<!-- Add selection functions to the script element before Datatables element -->
									<c:set target="${datatables_javaScript_elements_before}"
										property="${selectionCheckColumnId}">
	        function ${selectionCheckColumnId}(data, type, full) {
                            var result = '<input type="checkbox"
											class="${selectionCheckCssClass}"
											form="${selectionCheckColumnId}_form" />';
                return result;
		    }
	     	</c:set>
								</c:otherwise>
							</c:choose>
						</c:if>
					</c:if>
					<!-- In Datatables initialization callback handler add call to
                    functions that will initialize select options -->
					<c:set var="selectionToggleButton"
						value="${id}_selectionToggleButton" />
					<c:set target="${datatables_javaScript_elements_init}"
						property="selection_tools">
                // Bind click on toggle selecet icon
                jQuery("#${selectionToggleButton}").click(function (event){
                	event.preventDefault();
                	var selSupport = jQuery('#${id}').dataTable().fnSelection();
                	if (!selSupport) {
                		return;
                	}
                	if (selSupport.fnIsAllSelected()) {
                		selSupport.fnSelectNone();
                	} else {
                		selSupport.fnSelectAll();
                	}
                });
      </c:set>
				</c:when>
				<!-- /empty selection or selection -->

				<!-- If selection is not enabled, set selectionByCheck to false -->
				<c:otherwise>
					<c:set var="selectionByCheck" value="false" />
				</c:otherwise>
			</c:choose>

			<!-- show -->
			<c:if test="${show}">
				<c:set var="showColumnId" value="${id}_show_col" />
				<c:if test="${serverSide}">

					<spring:message arguments="${typeName}" code="entity_show" javaScriptEscape="true" var="show_label"/>
                    <spring:url value="/resources/images/show.png" var="show_image_url" />

					<!-- Add show functions to the script element before Datatables element -->
					<c:set target="${datatables_javaScript_elements_before}"
						property="${showColumnId}">
						<![CDATA[
	    function ${showColumnId}(data, type, full) {
		    var result =
	           '<a href="${urlPath}/'+full.${typeIdFieldName} + '?' + datatablesRedirect + '" alt="${show_label}" title="${show_label}" class="icon show_entity">'
	           + '</a>';

	        return result;
  		}
  		]]>
					</c:set>
				</c:if>
				<!-- /serverSide -->
			</c:if>
			<!-- /show -->

			<!-- Setup row creation option -->
			<c:if test="${create and !inlineCreating}">
				<c:set var="fnRenderCreateButton" value="${id}_render_createBtn" />
				<c:set var="create_label">
					<spring:escapeBody javaScriptEscape="true">
						<spring:message arguments="${typeName}" code="entity_create" />
					</spring:escapeBody>
				</c:set>

				<!-- Add create functions to the script element before Datatables element -->
				<c:set target="${datatables_javaScript_elements_before}"
					property="${fnRenderCreateButton}">
					<![CDATA[
      /* Add the create button to gvNIX toolbar */
      function ${fnRenderCreateButton}() {
      	var dttRowOnTopId = jQuery.base64.encode(unescape(encodeURIComponent( "${id}" )));
      	dttRowOnTopId = fnGetHashCode(dttRowOnTopId);
        var result =
          '<a href="${urlPath}${urlParams}&amp;' + datatablesRedirect + '&amp;dtt_table_id_hash='+ dttRowOnTopId + '" alt="${create_label}" title="${create_label}" class="icon create_entity">'
          + '</a>';
        jQuery('#${id}_gvnix_toolbar').append( result );
      }
      ]]>
				</c:set>

				<!-- In Datatables initialization callback handler add call to
         functions that will initialize create options -->
				<c:set target="${datatables_javaScript_elements_init}"
					property="${fnRenderCreateButton}">
      // Invoke function that adds the create btn in gvNIX toolbar
      ${fnRenderCreateButton}();
    </c:set>
			</c:if>
			<!-- /empty create or create -->

			<!-- Setup update options -->
			<c:if test="${update}">


				<c:set var="inlineEditing" value="false" />
				<c:if test="${datatablesInlineEditing}">
					<c:set var="inlineEditing" value="true" />
					<c:if test="${empty editingInfoLabel}">
						<c:set var="editingInfoLabel" value="datatables_editing_info" />
					</c:if>
					<spring:message code="${editingInfoLabel}" htmlEscape="false"
						var="editing_info_msg" />
					<c:set var="udpate_label">
						<spring:escapeBody javaScriptEscape="true">
							<spring:message arguments="${typeName}" code="entity_update" />
						</spring:escapeBody>
					</c:set>
					<spring:url value="/resources/images/update.png"
						var="update_image_url" />
					<c:set var="submit_label">
						<spring:escapeBody javaScriptEscape="true">
							<spring:message code="button_submit" />
						</spring:escapeBody>
					</c:set>
					<spring:url value="/resources/images/datatables/accept.png"
						var="submit_image_url" />
					<c:set var="cancel_label">
						<spring:escapeBody javaScriptEscape="true">
							<spring:message code="button_cancel" />
						</spring:escapeBody>
					</c:set>
					<spring:url value="/resources/images/datatables/cancel.png"
						var="cancel_image_url" />
				</c:if>

				<c:set var="updateColumnId" value="${id}_update_col" />
				<c:if test="${serverSide}">
					<!-- function to render cell -->
					<spring:message arguments="${typeName}" code="entity_update" javaScriptEscape="true" var="update_label"/>
					<spring:url value="/resources/images/update.png"
						var="update_image_url" />
					<c:set target="${datatables_javaScript_elements_before}"
						property="${updateColumnId}">
	        function ${updateColumnId}(data, type, full) {
                            <c:choose>
							<c:when test="${inlineEditing}">
								<c:set var="hrefUpdateAction">javascript:fnEditDatatableRow(\'${id}\',\''+full.${typeIdFieldName}+'\')</c:set>
							</c:when>
							<c:otherwise>
								<c:set var="hrefUpdateAction">${urlPath}/'+full.${typeIdFieldName}+'${urlParams}'+'&amp;'+ datatablesRedirect + '&amp;dtt_table_id_hash=' + fnGetHashCode(jQuery.base64.encode(unescape(encodeURIComponent( "${id}" ))))  + '</c:set>
							</c:otherwise>
						</c:choose>
	        	var result =
	              '<a href="${hrefUpdateAction}" title="${update_label}"
							class="icon update_entity">' + '</a>';
	            return result;
		    }
	    </c:set>
				</c:if>
			</c:if>

			<!-- Setup row delete options -->
			<c:if test="${delete}">
				<c:set var="removeColumnId" value="${id}_remove_col" />
				<c:if test="${serverSide or selectionMultiRow}">
					<spring:message arguments="${typeName}" code="entity_delete"
						var="delete_label" />
					<c:set var="delete_confirm_msg">
						<spring:escapeBody javaScriptEscape="true" htmlEscape="false">
							<spring:message htmlEscape="false" code="entity_delete_confirm" />
						</spring:escapeBody>
					</c:set>
					<spring:url value="/resources/images/delete.png"
						var="delete_image_url" />
					<c:if test="${selection and datatablesHasBatchSupport}">
						<c:set var="delete_multirow_confirm_msg">
							<spring:escapeBody javaScriptEscape="true" htmlEscape="false">
								<spring:message htmlEscape="false"
									code="entity_delete_multirow_confirm" />
							</spring:escapeBody>
						</c:set>
						<c:set var="delete_ok_msg">
							<spring:escapeBody javaScriptEscape="true">
								<spring:message code="entity_deleted" />
							</spring:escapeBody>
						</c:set>
						<c:set var="delete_none_msg">
							<spring:escapeBody javaScriptEscape="true">
								<spring:message code="entity_deleted_none" />
							</spring:escapeBody>
						</c:set>
						<c:set var="delete_error_msg">
							<spring:escapeBody javaScriptEscape="true">
								<spring:message code="entity_deleted_error" />
							</spring:escapeBody>
						</c:set>
						<spring:escapeBody javaScriptEscape="true">
							<spring:message code="entity_select_records" htmlEscape="false"
								var="selectRecords" />
						</spring:escapeBody>

						<!-- Add delete functions to the script element before Datatables element -->
						<c:set target="${datatables_javaScript_elements_before}"
							property="${removeColumnId}Batch">

		        var ${removeColumnId}_delete_error = "${delete_error_msg}";
		        var ${removeColumnId}_deleted = "${delete_ok_msg}";
		        var ${removeColumnId}_deleted_none = "${delete_none_msg}";
		        var ${removeColumnId}_multiconfirmation = "${delete_multirow_confirm_msg}";
		        var ${removeColumnId}_confirmation = "${delete_confirm_msg}";

                      /* ... */
		        function ${removeColumnId}_selected(aId) {
		        	var $table = jQuery('#${id}').dataTable();

              // Get the table GvNIX_Selection object
              var $selection = $table.fnSelection();

		          if (aId == null || aId === undefined || aId == '') {
			        	var selCount = $selection.fnSelectionCount();
			        	if ( selCount > 1) {
				        	if (!confirm(${removeColumnId}_multiconfirmation + ' ' + selCount)) {
				        		return;
				        	}
			        	} else if (selCount == 1){
				        	if (!confirm(${removeColumnId}_confirmation)) {
				        		return;
				        	}
			        	} else {
			        		showMessage("${delete_label}", "${selectRecords}", null);
			        		return;
			        	}
			        	var selectionInfo = $selection.fnGetSelectionInfo();
		        	} else {
								if (!confirm(${removeColumnId}_confirmation)) {
								  return;
								}
								var selectionInfo = {
								   'all' : false,
								      'idListSelected': true,
								      'idList' : [aId]
								}
		        	}
		        	var deleteParams = {
					    <c:if test="${not empty baseFilter}">
								<c:forEach items="${baseFilter}" var="entry">
					    '${entry.key}' : '${entry.value}',
					    </c:forEach>
							</c:if>
		        		'all' : selectionInfo.all,
		        		'deleteIn': selectionInfo.idListSelected,
		        		'idList' : selectionInfo.idList
		        	};
		        	$.post(
					  '${urlPath}/delete',
					  deleteParams,
					  function (data) {
		        			log('delete OK: ' + data);
					  		var count = parseInt(data);
					  		if (count > 0){
			        			showMessage("${delete_label}", ${removeColumnId}_deleted + ' ' + data, null);
		        			} else {
			        			showMessage("${delete_label}", ${removeColumnId}_deleted_none, null);
		        			}
		        			<c:choose>
								<c:when test="${serverSide}">
			        			  $table.fnStandingRedraw();
			        			</c:when>
								<c:otherwise>
			        				// TODO optimize it (remove lines instead reload page)
			        				location.reload();
		        				</c:otherwise>
							</c:choose>
	        				$selection.fnSelectNone();

	        				if($table.fnHasRowClick()){
	        					// Save state clearing previous selection
	        					$table.fnRowClick().fnSaveState(true);
	        					location.reload();
	        				}

		        		}
					  ).fail( function (data) {
		        			log('delete ERROR: ' + data.status + ' ' + data.statusText + '-' + data.responseText);
		        			if (!data || !data.responseText) {
                    showMessage("${delete_label}", ${removeColumnId}_delete_error, null);
		        			} else if (typeof data.responseText) {
		        			    try {
		        			    	var responseObj = jQuery.parseJSON(data.responseText);
                        showMessage("${delete_label}", ${removeColumnId}_delete_error + ': ' + (responseObj.localizedMessage ? responseObj.localizedMessage : responseObj.message), null);
		        				} catch (e) {
                      showMessage("${delete_label}", ${removeColumnId}_delete_error + ': ' + data.responseText, null);
		        				}
		        			}
		        		});
		        }

                /* Add the delete button to gvNIX toolbar */
		    	function ${removeColumnId}_div() {
           			var result =
                       '<a id="${removeColumnId}" href="#"
								alt="${delete_label}" title="${delete_label}"
								class="icon delete_entity">' + '</a>';
                          jQuery('#${id}_gvnix_toolbar').append( result );
           			jQuery('#${removeColumnId}').on('click', function (event) {event.preventDefault(); ${removeColumnId}_selected() });
	    		}
		     </c:set>

						<!-- In Datatables initialization callback handler add call to
                            functions that will initialize delete options -->
						<c:set target="${datatables_javaScript_elements_init}"
							property="${removeColumnId}Batch">
                        // Invoke function that adds the delete btn in gvNIX toolbar
		     	${removeColumnId}_div();
		     </c:set>

					</c:if>
					<!-- Add delete functions to the script element before Datatables element -->
					<c:set target="${datatables_javaScript_elements_before}"
						property="${removeColumnId}">
		        var ${removeColumnId}_confirmation = "${delete_confirm_msg}";
		        function ${removeColumnId}(data, type, full) {
                <c:set var="hrefRemoveAction">javascript:${removeColumnId}_selected(\''+full.${typeIdFieldName}+'\')</c:set>
						<c:choose>
							<c:when test="${selection and datatablesHasBatchSupport}">
		                var result = '<a id="${removeColumnId}"
									href="${hrefRemoveAction}" alt="${delete_label}"
									title="${delete_label}" class="icon delete_entity"></a>';
                	</c:when>
							<c:otherwise>
								<c:set var="currentId" value="'+full.${typeIdFieldName}+'" />
								<c:set var="confirmation_script"
									value="var confirmDelete = confirm(${removeColumnId}_confirmation); if(confirmDelete){jQuery(\'#${removeColumnId}_${currentId}_form\').submit();};"></c:set>
                		var result = '<form method="post"
									id="${removeColumnId}_${currentId}_form"
									action="${urlPath}/${currentId}">

                  <!-- gvGeoportal - Fixed error with Tomcat 7.0.54 -->
									<input type="hidden" value="DELETE" name="_method"
										data-original-title="${EMPTY_STRING}" title="${EMPTY_STRING}" /> <a
										id="${removeColumnId}_${currentId}" href="#"
										alt="${delete_label}" title="${delete_label}"
										class="icon delete_entity" onclick="${confirmation_script}" />
								</form>';
                	</c:otherwise>
						</c:choose>
                return result;
			    }
		     </c:set>
				</c:if>
			</c:if>
			<!-- /empty delete or delete -->


			<!--
  *******	End Tabular view configuration **********
   -->
		</c:otherwise>
	</c:choose>

	<!-- Custom datatables API functions -->
	<c:set var="initCustomFunctionsCallbackId"
		value="${id}_init_custom_callbk" />

	<div id="${id}_gvnix_datatables">
		<script type="text/javascript">
  <c:if test="${not empty datatables_javaScript_elements_before}">
		<c:forEach var="entry" items="${datatables_javaScript_elements_before}">
		  ${entry.value}
		</c:forEach>
  </c:if>

	// Initialize custom API functions for this table
	function ${initCustomFunctionsCallbackId}(oSettings,json) {
	           // Create toolbar
        jQuery('#${id}_wrapper')
            		.prepend('<div id="${id}_gvnix_toolbar" class="gvnix_dataTables_toolbar"></div>');

        fnDatatablesExtInit(oSettings,'${id}', {
	    		'filterOnReturn': '${filterOnReturn}',
	    		'filteringDelay' : '${filteringDelay}'
	    		<c:if test="${selection}">
	    		, 'selection': {
                    'toolbarId': '${id}_gvnix_toolbar', // TODO: Create btns in .js
	    			'multiRow': ${selectionMultiRow},
	    			'checkColumnClass': '${selectionCheckCssClass}',
	    			'infoMessage': '${selection_info_msg}',
	    			<c:if test="${not empty selectionSelectedCssClass}">
	    			'classForSelectedRow': '${selectionSelectedCssClass}',
	    			</c:if>
	    			<c:if test="${not empty selectionNotSelectedCssClass}">
	    			'classForNotSelectedRow': '${selectionNotSelectedCssClass}',
	    			</c:if>
	    			'debug': false}
	    		</c:if>
            <c:if test="${inlineEditing || inlineCreating}">
                , 'editing' : {
                    'toolbarId': '${id}_gvnix_toolbar',
                    'applicationContext': '${urlPath}',
                    'update': ${update},
                    'updateBtnLabel': '${udpate_label}',
                    'updateBtnClass': 'icon update_entity',
                    'submitBtnLabel': '${submit_label}',
                    'submitBtnClass': 'icon submit_entity',
                    'cancelBtnLabel': '${cancel_label}',
                    'cancelBtnClass': 'icon cancel_entity',
                    'create': ${create},
                    'delete': ${delete},
                    'infoMessage': '${editing_info_msg}',
                    'debug': false}
            </c:if>
            <c:if test="${not empty detailsInfo and datatablesStandardMode}">
                , 'rowclick' : {persistState: true}
            </c:if>
            <c:if test="${create || update || (not empty dtt_row_on_top_ids)}">
                <c:choose>
                  <c:when test="${not empty dtt_row_on_top_ids}">
                , 'rowsOnTop': { 'asRowOnTopIds' : ${dtt_row_on_top_ids}, 'asTableIdHash' : '${dtt_table_id_hash}', 'asParentTableIdHash' : '${dtt_parent_table_id_hash}' }
                  </c:when>
                  <c:otherwise>
                , 'rowsOnTop': true
                  </c:otherwise>
                </c:choose>
            </c:if>
	    	});

			<c:forEach var="entry" items="${datatables_javaScript_elements_init}">
			${entry.value}
			</c:forEach>
	}
  </script>

		<!-- Dandelion-Datatables -->
		<gvnixddt:table id="${id}" data="${data}" path="${urlPath}"
			typeIdFieldName="${typeIdFieldName}" create="${create}"
			update="${update}" delete="${delete}"
			render="${empty render or render}" z="${z}" url="${url}" row="item"
			appear="${appear}" cdn="${cdn}" cssStyle="${cssStyle}"
			cssClass="${cssClass}" rowIdBase="${rowIdBase}"
			rowIdPrefix="${rowIdPrefix}" rowIdSufix="${rowIdSufix}"
			deferRender="${deferRender}" dom="${dom}"
			info="${empty info or info}" paginate="${empty paginate or paginate}"
			lengthChange="${empty lengthChange or lengthChange}"
			paginationType="${paginationType}" filter="${empty filter or filter}"
			sort="${empty sort or sort}" autoWidth="${autoWidth}"
			processing="${empty processing or processing}"
			serverSide="${serverSide}" serverData="${serverData}"
			serverParams="${serverParams}" pipelining="${pipelining}"
			pipeSize="${pipeSize}" stateSave="${empty stateSave or stateSave}"
			export="${export}" exportLinks="${exportLinks}"
			jqueryUI="${jqueryUI}" footer="${footer}" theme="${theme}"
			themeOption="${themeOption}" lengthMenu="${lengthMenu}"
			cssStripes="${cssStripes}" displayLength="${displayLength}"
			ext="${ext}" confGroup="${confGroup}"
			filterPlaceholder="${filterPlaceholder}" fixedHeader="${fixedHeader}"
			fixedPosition="${fixedPosition}" offsetTop="${offsetTop}"
			scroller="${scroller}" scrollY="${scrollY}"
			scrollCollapse="${scrollCollapse}" scrollX="${scrollX}"
			scrollXInner="${scrollXInner}" colReorder="${colReorder}"
			data-stateprefix="${statePrefix}">

			<!-- Adding extra configuration into Datatables -->
			<spring:url var="extraConf_var" value="" />
			<datatables:extraConf
				src="${extraConf_var}/resources/scripts/datatables/jquery.dataTables.extraConf.js" />

			<c:choose>

				<!-- On register view mode add a datatables column only, checkbox,
                 row update button, etc aren't needed -->
				<c:when test="${not datatablesStandardMode}">
					<!-- Cell to replace by data -->
					<gvnixddt:column id="${columnId}" searchable="false"
						property="${rowIdBase}" filterable="false" sortable="false"
						title="${entity_title}"></gvnixddt:column>

					<!--  callback to initialize custom api functions -->
					<datatables:callback type="draw" function="evalScripts" />

					<c:if test="${not empty detailsInfo}">
						<datatables:callback type="row" function="rowCallback" />
					</c:if>
				</c:when>

				<!-- On table view mode, setup columns for action buttons -->
				<c:otherwise>

					<!-- If rows are selected using checkboxes, add action column with
                     the checkbox -->
					<c:if test="${selectionByCheck}">
						<c:choose>

							<!-- AJAX cell render -->
							<c:when test="${serverSide}">
								<table:action-column uid="${selectionCheckColumnId}"
									id="${selectionCheckColumnId}" cssClass="utilbox"
									cssCellClass="utilbox"
									renderFunction="${selectionCheckColumnId}"
									cssStyle="${actionHeaderCssStyle}" />
							</c:when>

							<!-- DOM cell render -->
							<c:otherwise>
								<table:action-column uid="${selectionCheckColumnId}"
									id="${selectionCheckColumnId}" cssCellClass="utilbox"
									cssStyle="${actionHeaderCssStyle}">
									<c:if test="${not empty item }">
										<input type="checkbox" class="${selectionCheckCssClass}"
											form="${selectionCheckColumnId}_form" />
									</c:if>
								</table:action-column>
							</c:otherwise>
						</c:choose>
						<c:if test="${!isRadioButton}">
							<datatables:columnHead uid="${selectionCheckColumnId}">
								<a id="${selectionToggleButton}" href="#"
									class="icon select_toggle"></a>
							</datatables:columnHead>
						</c:if>
					</c:if>

					<!-- data columns will be inserted here -->
					<jsp:doBody />

					<!-- Register datatables callbacks -->
					<c:forEach var="entry" items="${datatables_callback_elements}">
						<c:choose>
							<c:when test="${entry.key eq 'cookie'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="cookie" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'createdRow'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="createdRow" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'draw'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="draw" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'footer'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="footer" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'format'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="format" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'header'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="header" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'info'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="info" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'init'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="init" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'predraw'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="predraw" function="${function}" />
								</c:forEach>
							</c:when>
							<c:when test="${entry.key eq 'row'}">
								<c:forEach var="function" items="${entry.value}">
									<datatables:callback type="row" function="${function}" />
								</c:forEach>
							</c:when>
						</c:choose>
					</c:forEach>

					<!-- Add action column with show row details button -->
					<c:if test="${show}">
						<c:choose>

							<!-- AJAX cell render -->
							<c:when test="${serverSide}">
								<table:action-column id="${showColumnId}" cssClass="utilbox"
									cssCellClass="utilbox" renderFunction="${showColumnId}"
									cssStyle="${actionHeaderCssStyle}" />
							</c:when>

							<!-- DOM cell render -->
							<c:otherwise>
								<table:action-column id="${showColumnId}" cssCellClass="utilbox"
									cssStyle="${actionHeaderCssStyle}">
									<c:if test="${not empty item }">
										<c:set var="itemId">
											<spring:eval expression="item[typeIdFieldName]" />
										</c:set>
										<spring:url value="${path}/${itemId}" var="show_form_url" />
										<spring:url value="/resources/images/show.png"
											var="show_image_url" />
										<spring:message arguments="${typeName}" code="entity_show"
											var="show_label" htmlEscape="false" />
										<a href="#"
											onclick="javascript: window.location = '${show_form_url}?' + datatablesRedirect"
											alt="${fn:escapeXml(show_label)}"
											title="${fn:escapeXml(show_label)}" class="icon show_entity">
										</a>
									</c:if>
								</table:action-column>
							</c:otherwise>
						</c:choose>
					</c:if>
					<!-- /show -->

					<!-- Add action column with row update button if inline
                    editing is not enabled -->
					<c:if test="${update and not editing}">
						<c:choose>

							<!-- AJAX cell render -->
							<c:when test="${serverSide}">
								<table:action-column id="${updateColumnId}"
									cssCellClass="utilbox" renderFunction="${updateColumnId}"
									cssStyle="${actionHeaderCssStyle}" />
							</c:when>

							<!-- DOM cell render -->
							<c:otherwise>
								<table:action-column id="${updateColumnId}"
									cssCellClass="utilbox" cssStyle="${actionHeaderCssStyle}">
									<c:if test="${not empty item }">
										<c:set var="itemId">
											<spring:eval expression="item[typeIdFieldName]" />
										</c:set>
										<spring:url value="${path}/${itemId}" var="update_form_url" />
										<spring:url value="/resources/images/update.png"
											var="update_image_url" />
										<spring:message arguments="${typeName}" code="entity_update"
											var="update_label" htmlEscape="false" />
										<c:choose>
											<c:when test="${inlineEditing}">
												<c:set var="hrefUpdateAction">javascript:fnEditDatatableRow('${id}','${itemId}')</c:set>
											</c:when>
											<c:otherwise>
												<c:set var="hrefUpdateAction">javascript: window.location = '${update_form_url}${urlParams}&amp;'+ datatablesRedirect</c:set>
											</c:otherwise>
										</c:choose>

										<a href="#" onclick="${hrefUpdateAction}"
											alt="${fn:escapeXml(update_label)}"
											title="${fn:escapeXml(update_label)}"
											class="icon update_entity"> </a>
									</c:if>
								</table:action-column>
							</c:otherwise>
						</c:choose>
					</c:if>

					<!-- Add action column with row delete button -->
					<c:if test="${delete}">
						<c:choose>

							<!-- AJAX cell render -->
							<c:when test="${serverSide}">
								<table:action-column id="${removeColumnId}"
									cssCellClass="utilbox" renderFunction="${removeColumnId}"
									cssStyle="${actionHeaderCssStyle}" />
							</c:when>

							<!-- DOM cell render -->
							<c:otherwise>
								<table:action-column id="${removeColumnId}"
									cssCellClass="utilbox" cssStyle="${actionHeaderCssStyle}">
									<c:if test="${not empty item }">
										<c:set var="itemId">
											<spring:eval expression="item[typeIdFieldName]" />
										</c:set>
										<spring:url value="${path}/${itemId}" var="delete_form_url" />

										<!-- improvement TBC -->
										<spring:url value="/resources/images/delete.png"
											var="delete_image_url" />
										<form:form action="#"
											onsubmit="javascript: this.action = '${delete_form_url}?' + datatablesRedirect"
											method="DELETE">
											<spring:message arguments="${typeName}" code="entity_delete"
												var="delete_label" htmlEscape="false" />
											<c:set var="delete_confirm_msg">
												<spring:escapeBody javaScriptEscape="true"
													htmlEscape="false">
													<spring:message htmlEscape="false"
														code="entity_delete_confirm" />
												</spring:escapeBody>
											</c:set>
											<input alt="${fn:escapeXml(delete_label)}" class="image"
												src="${delete_image_url}"
												title="${fn:escapeXml(delete_label)}" type="image"
												value="${fn:escapeXml(delete_label)}"
												onclick="return confirm('${delete_confirm_msg}');" />
										</form:form>
									</c:if>
								</table:action-column>
							</c:otherwise>
						</c:choose>
					</c:if>

					<!-- configure some export formats -->
					<c:forTokens items="${export}" delims="," var="export_format">
						<c:set var="export_format_lower"
							value="${fn:toLowerCase(export_format)}" />
						<c:choose>

							<!-- AJAX export configuration -->
							<c:when test="${serverSide}">

								<c:set var="exportColumns"
									value="${datatables_export_columns[export_format_lower]}" />
								<c:set var="exportColumnsAllFormats"
									value="${datatables_export_columns['all']}" />
								<c:set var="columnsTitleStr">${datatables_export_columns_title}</c:set>
								<c:set var="columnsTitle"
									value="${fn:replace(columnsTitleStr, '=', '||')}" />
								<datatables:export type="${export_format_lower}"
									includeHeader="true" method="post" fileName="${typeName}"
									cssClass="icon export_${export_format_lower}"
									label="${export_format_lower}"
									url="${urlPath}/export${export_format_lower}?${export_format}ExportColumns=${exportColumns}&amp;allExportColumns=${exportColumnsAllFormats}&amp;columnsTitle=${columnsTitle}" />
							</c:when>

							<!-- DOM export configuration -->
							<c:otherwise>
								<datatables:export type="${export_format_lower}"
									includeHeader="true" autoSize="true" fileName="${typeName}"
									cssClass="icon export_${export_format_lower}"
									label="${export_format_lower}" />
							</c:otherwise>
						</c:choose>
					</c:forTokens>

					<!-- Set the function that initializes custom API functions -->
					<datatables:callback type="init"
						function="${initCustomFunctionsCallbackId}" />
				</c:otherwise>
			</c:choose>
		</gvnixddt:table>

		<c:if test="${isRadioButton}">
			<script type="text/javascript">

			 function deleteCheckedRows(clickedElement){

				 //obtenemos datos local storage para no almacenar informacion sobre checks seleccionados
				 var hashLocation = fnGetHashCode(window.location.pathname);
				 var itemLocalStorage = hashLocation + "_gvnixRowSelected-"+ $(clickedElement).closest('table').attr('id');

				 // obtemos id del elemento que desemboca el proceso
				 var idOrigen = $(clickedElement).closest( "tr" ).attr("id");

				 // recorremos todos los checkbox para deseleccionar los que no toque
				 $('input[type=checkbox]').each(function(index,el){
					    var id = $(this).closest( "tr" ).attr("id");
				        if(this.checked)  {
							if(id !== idOrigen){
								//deselecciono check
								$(this).attr('checked', false);
								$(this).closest( "tr" ).removeClass("row_selected");

								//quito de la lista del localstore este dato
								if(GvNIX_Selection._aInstances[0]._data.dt.sTableId == $(clickedElement).closest('table').attr('id')){
									GvNIX_Selection._aInstances[0]._data.idList.splice(0);
								}
							}else{
								$(this).closest( "tr" ).addClass("row_selected");
							}
				        }else{
				        	$(this).closest( "tr" ).removeClass("row_selected");
				        }
				    });
			 }
			</script>
		</c:if>

		<script type="text/javascript">
	<c:forEach var="entry" items="${datatables_javaScript_elements_after}">
	${entry.value}
	</c:forEach>

	<c:if test="${not empty detailsInfo and datatablesStandardMode}">

	function loadDatatablesState${id} (count) {

		if (!count) count = 1;
		if (count > 50) {
			log ("Datatables ${id} row click state is not loaded because it's current not available (not visible tab)");
			return;
		}

		var instance = GvNIX_RowClick.fnGetInstance('${id}');

		if (!instance) {
			count++;
			window.setTimeout(loadDatatablesState${id}, 100, count);
			return;
		}

		instance.fnLoadState(true);
	}

	jQuery(document).ready(function (){
		window.setTimeout(loadDatatablesState${id}, 100);

	});
	</c:if>

  </script>
	</div>
</jsp:root>
