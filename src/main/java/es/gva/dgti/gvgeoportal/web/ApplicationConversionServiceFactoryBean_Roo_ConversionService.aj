// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.gva.dgti.gvgeoportal.web;

import es.gva.dgti.gvgeoportal.domain.AgrupadorCapa;
import es.gva.dgti.gvgeoportal.domain.AgrupadorCapaServicioWeb;
import es.gva.dgti.gvgeoportal.domain.Componentes;
import es.gva.dgti.gvgeoportal.domain.GeoPortal;
import es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb;
import es.gva.dgti.gvgeoportal.domain.GestorCatalogo;
import es.gva.dgti.gvgeoportal.domain.ServicioWeb;
import es.gva.dgti.gvgeoportal.domain.SistemaCoordenadas;
import es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas;
import es.gva.dgti.gvgeoportal.domain.components.ConfMiniMapa;
import es.gva.dgti.gvgeoportal.domain.components.ConfVistasPredefinidas;
import es.gva.dgti.gvgeoportal.service.domain.AgrupadorCapaService;
import es.gva.dgti.gvgeoportal.service.domain.AgrupadorCapaServicioWebService;
import es.gva.dgti.gvgeoportal.service.domain.ComponentesService;
import es.gva.dgti.gvgeoportal.service.domain.ConfCapasTematicasService;
import es.gva.dgti.gvgeoportal.service.domain.ConfMiniMapaService;
import es.gva.dgti.gvgeoportal.service.domain.ConfVistasPredefinidasService;
import es.gva.dgti.gvgeoportal.service.domain.GeoPortalService;
import es.gva.dgti.gvgeoportal.service.domain.GeoportalServicioWebService;
import es.gva.dgti.gvgeoportal.service.domain.GestorCatalogoService;
import es.gva.dgti.gvgeoportal.service.domain.ServicioWebService;
import es.gva.dgti.gvgeoportal.service.domain.SistemaCoordenadasService;
import es.gva.dgti.gvgeoportal.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AgrupadorCapaService ApplicationConversionServiceFactoryBean.agrupadorCapaService;
    
    @Autowired
    AgrupadorCapaServicioWebService ApplicationConversionServiceFactoryBean.agrupadorCapaServicioWebService;
    
    @Autowired
    ComponentesService ApplicationConversionServiceFactoryBean.componentesService;
    
    @Autowired
    GeoPortalService ApplicationConversionServiceFactoryBean.geoPortalService;
    
    @Autowired
    GeoportalServicioWebService ApplicationConversionServiceFactoryBean.geoportalServicioWebService;
    
    @Autowired
    GestorCatalogoService ApplicationConversionServiceFactoryBean.gestorCatalogoService;
    
    @Autowired
    ServicioWebService ApplicationConversionServiceFactoryBean.servicioWebService;
    
    @Autowired
    SistemaCoordenadasService ApplicationConversionServiceFactoryBean.sistemaCoordenadasService;
    
    @Autowired
    ConfCapasTematicasService ApplicationConversionServiceFactoryBean.confCapasTematicasService;
    
    @Autowired
    ConfMiniMapaService ApplicationConversionServiceFactoryBean.confMiniMapaService;
    
    @Autowired
    ConfVistasPredefinidasService ApplicationConversionServiceFactoryBean.confVistasPredefinidasService;
    
    public Converter<Long, AgrupadorCapa> ApplicationConversionServiceFactoryBean.getIdToAgrupadorCapaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.AgrupadorCapa>() {
            public es.gva.dgti.gvgeoportal.domain.AgrupadorCapa convert(java.lang.Long id) {
                return agrupadorCapaService.findAgrupadorCapa(id);
            }
        };
    }
    
    public Converter<String, AgrupadorCapa> ApplicationConversionServiceFactoryBean.getStringToAgrupadorCapaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.AgrupadorCapa>() {
            public es.gva.dgti.gvgeoportal.domain.AgrupadorCapa convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AgrupadorCapa.class);
            }
        };
    }
    
    public Converter<AgrupadorCapaServicioWeb, String> ApplicationConversionServiceFactoryBean.getAgrupadorCapaServicioWebToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.AgrupadorCapaServicioWeb, java.lang.String>() {
            public String convert(AgrupadorCapaServicioWeb agrupadorCapaServicioWeb) {
                return new StringBuilder().append(agrupadorCapaServicioWeb.getAuditCreation()).append(' ').append(agrupadorCapaServicioWeb.getAuditCreatedBy()).append(' ').append(agrupadorCapaServicioWeb.getAuditLastUpdate()).append(' ').append(agrupadorCapaServicioWeb.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, AgrupadorCapaServicioWeb> ApplicationConversionServiceFactoryBean.getIdToAgrupadorCapaServicioWebConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.AgrupadorCapaServicioWeb>() {
            public es.gva.dgti.gvgeoportal.domain.AgrupadorCapaServicioWeb convert(java.lang.Long id) {
                return agrupadorCapaServicioWebService.findAgrupadorCapaServicioWeb(id);
            }
        };
    }
    
    public Converter<String, AgrupadorCapaServicioWeb> ApplicationConversionServiceFactoryBean.getStringToAgrupadorCapaServicioWebConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.AgrupadorCapaServicioWeb>() {
            public es.gva.dgti.gvgeoportal.domain.AgrupadorCapaServicioWeb convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AgrupadorCapaServicioWeb.class);
            }
        };
    }
    
    public Converter<Componentes, String> ApplicationConversionServiceFactoryBean.getComponentesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.Componentes, java.lang.String>() {
            public String convert(Componentes componentes) {
                return new StringBuilder().append(componentes.getAuditCreation()).append(' ').append(componentes.getAuditCreatedBy()).append(' ').append(componentes.getAuditLastUpdate()).append(' ').append(componentes.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, Componentes> ApplicationConversionServiceFactoryBean.getIdToComponentesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.Componentes>() {
            public es.gva.dgti.gvgeoportal.domain.Componentes convert(java.lang.Long id) {
                return componentesService.findComponentes(id);
            }
        };
    }
    
    public Converter<String, Componentes> ApplicationConversionServiceFactoryBean.getStringToComponentesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.Componentes>() {
            public es.gva.dgti.gvgeoportal.domain.Componentes convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Componentes.class);
            }
        };
    }
    
    public Converter<Long, GeoPortal> ApplicationConversionServiceFactoryBean.getIdToGeoPortalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.GeoPortal>() {
            public es.gva.dgti.gvgeoportal.domain.GeoPortal convert(java.lang.Long id) {
                return geoPortalService.findGeoPortal(id);
            }
        };
    }
    
    public Converter<String, GeoPortal> ApplicationConversionServiceFactoryBean.getStringToGeoPortalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.GeoPortal>() {
            public es.gva.dgti.gvgeoportal.domain.GeoPortal convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), GeoPortal.class);
            }
        };
    }
    
    public Converter<GeoportalServicioWeb, String> ApplicationConversionServiceFactoryBean.getGeoportalServicioWebToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb, java.lang.String>() {
            public String convert(GeoportalServicioWeb geoportalServicioWeb) {
                return new StringBuilder().append(geoportalServicioWeb.getAuditCreation()).append(' ').append(geoportalServicioWeb.getAuditCreatedBy()).append(' ').append(geoportalServicioWeb.getAuditLastUpdate()).append(' ').append(geoportalServicioWeb.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, GeoportalServicioWeb> ApplicationConversionServiceFactoryBean.getIdToGeoportalServicioWebConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb>() {
            public es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb convert(java.lang.Long id) {
                return geoportalServicioWebService.findGeoportalServicioWeb(id);
            }
        };
    }
    
    public Converter<String, GeoportalServicioWeb> ApplicationConversionServiceFactoryBean.getStringToGeoportalServicioWebConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb>() {
            public es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), GeoportalServicioWeb.class);
            }
        };
    }
    
    public Converter<GestorCatalogo, String> ApplicationConversionServiceFactoryBean.getGestorCatalogoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.GestorCatalogo, java.lang.String>() {
            public String convert(GestorCatalogo gestorCatalogo) {
                return new StringBuilder().append(gestorCatalogo.getAuditCreation()).append(' ').append(gestorCatalogo.getAuditCreatedBy()).append(' ').append(gestorCatalogo.getAuditLastUpdate()).append(' ').append(gestorCatalogo.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, GestorCatalogo> ApplicationConversionServiceFactoryBean.getIdToGestorCatalogoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.GestorCatalogo>() {
            public es.gva.dgti.gvgeoportal.domain.GestorCatalogo convert(java.lang.Long id) {
                return gestorCatalogoService.findGestorCatalogo(id);
            }
        };
    }
    
    public Converter<String, GestorCatalogo> ApplicationConversionServiceFactoryBean.getStringToGestorCatalogoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.GestorCatalogo>() {
            public es.gva.dgti.gvgeoportal.domain.GestorCatalogo convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), GestorCatalogo.class);
            }
        };
    }
    
    public Converter<ServicioWeb, String> ApplicationConversionServiceFactoryBean.getServicioWebToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.ServicioWeb, java.lang.String>() {
            public String convert(ServicioWeb servicioWeb) {
                return new StringBuilder().append(servicioWeb.getAuditCreation()).append(' ').append(servicioWeb.getAuditCreatedBy()).append(' ').append(servicioWeb.getAuditLastUpdate()).append(' ').append(servicioWeb.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, ServicioWeb> ApplicationConversionServiceFactoryBean.getIdToServicioWebConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.ServicioWeb>() {
            public es.gva.dgti.gvgeoportal.domain.ServicioWeb convert(java.lang.Long id) {
                return servicioWebService.findServicioWeb(id);
            }
        };
    }
    
    public Converter<String, ServicioWeb> ApplicationConversionServiceFactoryBean.getStringToServicioWebConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.ServicioWeb>() {
            public es.gva.dgti.gvgeoportal.domain.ServicioWeb convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ServicioWeb.class);
            }
        };
    }
    
    public Converter<Long, SistemaCoordenadas> ApplicationConversionServiceFactoryBean.getIdToSistemaCoordenadasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.SistemaCoordenadas>() {
            public es.gva.dgti.gvgeoportal.domain.SistemaCoordenadas convert(java.lang.Long id) {
                return sistemaCoordenadasService.findSistemaCoordenadas(id);
            }
        };
    }
    
    public Converter<String, SistemaCoordenadas> ApplicationConversionServiceFactoryBean.getStringToSistemaCoordenadasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.SistemaCoordenadas>() {
            public es.gva.dgti.gvgeoportal.domain.SistemaCoordenadas convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SistemaCoordenadas.class);
            }
        };
    }
    
    public Converter<ConfCapasTematicas, String> ApplicationConversionServiceFactoryBean.getConfCapasTematicasToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas, java.lang.String>() {
            public String convert(ConfCapasTematicas confCapasTematicas) {
                return new StringBuilder().append(confCapasTematicas.getAuditCreation()).append(' ').append(confCapasTematicas.getAuditCreatedBy()).append(' ').append(confCapasTematicas.getAuditLastUpdate()).append(' ').append(confCapasTematicas.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, ConfCapasTematicas> ApplicationConversionServiceFactoryBean.getIdToConfCapasTematicasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas>() {
            public es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas convert(java.lang.Long id) {
                return confCapasTematicasService.findConfCapasTematicas(id);
            }
        };
    }
    
    public Converter<String, ConfCapasTematicas> ApplicationConversionServiceFactoryBean.getStringToConfCapasTematicasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas>() {
            public es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ConfCapasTematicas.class);
            }
        };
    }
    
    public Converter<ConfMiniMapa, String> ApplicationConversionServiceFactoryBean.getConfMiniMapaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.components.ConfMiniMapa, java.lang.String>() {
            public String convert(ConfMiniMapa confMiniMapa) {
                return new StringBuilder().append(confMiniMapa.getAuditCreation()).append(' ').append(confMiniMapa.getAuditCreatedBy()).append(' ').append(confMiniMapa.getAuditLastUpdate()).append(' ').append(confMiniMapa.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, ConfMiniMapa> ApplicationConversionServiceFactoryBean.getIdToConfMiniMapaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.components.ConfMiniMapa>() {
            public es.gva.dgti.gvgeoportal.domain.components.ConfMiniMapa convert(java.lang.Long id) {
                return confMiniMapaService.findConfMiniMapa(id);
            }
        };
    }
    
    public Converter<String, ConfMiniMapa> ApplicationConversionServiceFactoryBean.getStringToConfMiniMapaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.components.ConfMiniMapa>() {
            public es.gva.dgti.gvgeoportal.domain.components.ConfMiniMapa convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ConfMiniMapa.class);
            }
        };
    }
    
    public Converter<ConfVistasPredefinidas, String> ApplicationConversionServiceFactoryBean.getConfVistasPredefinidasToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<es.gva.dgti.gvgeoportal.domain.components.ConfVistasPredefinidas, java.lang.String>() {
            public String convert(ConfVistasPredefinidas confVistasPredefinidas) {
                return new StringBuilder().append(confVistasPredefinidas.getAuditCreation()).append(' ').append(confVistasPredefinidas.getAuditCreatedBy()).append(' ').append(confVistasPredefinidas.getAuditLastUpdate()).append(' ').append(confVistasPredefinidas.getAuditLastUpdatedBy()).toString();
            }
        };
    }
    
    public Converter<Long, ConfVistasPredefinidas> ApplicationConversionServiceFactoryBean.getIdToConfVistasPredefinidasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, es.gva.dgti.gvgeoportal.domain.components.ConfVistasPredefinidas>() {
            public es.gva.dgti.gvgeoportal.domain.components.ConfVistasPredefinidas convert(java.lang.Long id) {
                return confVistasPredefinidasService.findConfVistasPredefinidas(id);
            }
        };
    }
    
    public Converter<String, ConfVistasPredefinidas> ApplicationConversionServiceFactoryBean.getStringToConfVistasPredefinidasConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, es.gva.dgti.gvgeoportal.domain.components.ConfVistasPredefinidas>() {
            public es.gva.dgti.gvgeoportal.domain.components.ConfVistasPredefinidas convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ConfVistasPredefinidas.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAgrupadorCapaToStringConverter());
        registry.addConverter(getIdToAgrupadorCapaConverter());
        registry.addConverter(getStringToAgrupadorCapaConverter());
        registry.addConverter(getAgrupadorCapaServicioWebToStringConverter());
        registry.addConverter(getIdToAgrupadorCapaServicioWebConverter());
        registry.addConverter(getStringToAgrupadorCapaServicioWebConverter());
        registry.addConverter(getComponentesToStringConverter());
        registry.addConverter(getIdToComponentesConverter());
        registry.addConverter(getStringToComponentesConverter());
        registry.addConverter(getGeoPortalToStringConverter());
        registry.addConverter(getIdToGeoPortalConverter());
        registry.addConverter(getStringToGeoPortalConverter());
        registry.addConverter(getGeoportalServicioWebToStringConverter());
        registry.addConverter(getIdToGeoportalServicioWebConverter());
        registry.addConverter(getStringToGeoportalServicioWebConverter());
        registry.addConverter(getGestorCatalogoToStringConverter());
        registry.addConverter(getIdToGestorCatalogoConverter());
        registry.addConverter(getStringToGestorCatalogoConverter());
        registry.addConverter(getServicioWebToStringConverter());
        registry.addConverter(getIdToServicioWebConverter());
        registry.addConverter(getStringToServicioWebConverter());
        registry.addConverter(getSistemaCoordenadasToStringConverter());
        registry.addConverter(getIdToSistemaCoordenadasConverter());
        registry.addConverter(getStringToSistemaCoordenadasConverter());
        registry.addConverter(getConfCapasTematicasToStringConverter());
        registry.addConverter(getIdToConfCapasTematicasConverter());
        registry.addConverter(getStringToConfCapasTematicasConverter());
        registry.addConverter(getConfMiniMapaToStringConverter());
        registry.addConverter(getIdToConfMiniMapaConverter());
        registry.addConverter(getStringToConfMiniMapaConverter());
        registry.addConverter(getConfVistasPredefinidasToStringConverter());
        registry.addConverter(getIdToConfVistasPredefinidasConverter());
        registry.addConverter(getStringToConfVistasPredefinidasConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
