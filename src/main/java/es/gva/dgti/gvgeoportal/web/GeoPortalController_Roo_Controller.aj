// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.gva.dgti.gvgeoportal.web;

import es.gva.dgti.gvgeoportal.domain.GeoPortal;
import es.gva.dgti.gvgeoportal.service.domain.GeoPortalService;
import es.gva.dgti.gvgeoportal.service.domain.SistemaCoordenadasService;
import es.gva.dgti.gvgeoportal.web.GeoPortalController;
import java.io.UnsupportedEncodingException;
import javax.servlet.http.HttpServletRequest;
import org.joda.time.format.DateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect GeoPortalController_Roo_Controller {
    
    @Autowired
    GeoPortalService GeoPortalController.geoPortalService;
    
    @Autowired
    SistemaCoordenadasService GeoPortalController.sistemaCoordenadasService;
    
    @RequestMapping(produces = "text/html")
    public String GeoPortalController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("geoportales", GeoPortal.findGeoPortalEntries(firstResult, sizeNo, sortFieldName, sortOrder));
            float nrOfPages = (float) geoPortalService.countAllGeoPortales() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("geoportales", GeoPortal.findAllGeoPortales(sortFieldName, sortOrder));
        }
        addDateTimeFormatPatterns(uiModel);
        return "geoportales/list";
    }
    
    void GeoPortalController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("geoPortal_auditcreation_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("geoPortal_auditlastupdate_date_format", DateTimeFormat.patternForStyle("MM", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("geoPortal_fechaalta_date_format", "dd/MM/yyyy");
        uiModel.addAttribute("geoPortal_fechabaja_date_format", "dd/MM/yyyy");
    }
    
    void GeoPortalController.populateEditForm(Model uiModel, GeoPortal geoPortal) {
        uiModel.addAttribute("geoPortal", geoPortal);
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("agrupadorcapas", agrupadorCapaService.findAllAgrupadorCapas());
        uiModel.addAttribute("geoportalserviciowebs", geoportalServicioWebService.findAllGeoportalServicioWebs());
        uiModel.addAttribute("sistemacoordenadasitems", sistemaCoordenadasService.findAllSistemaCoordenadas());
    }
    
    String GeoPortalController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
