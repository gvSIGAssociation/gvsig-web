// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.gva.dgti.gvgeoportal.domain;

import es.gva.dgti.gvgeoportal.domain.GeoportalServicioWeb;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.springframework.transaction.annotation.Transactional;

privileged aspect GeoportalServicioWeb_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext
    transient EntityManager GeoportalServicioWeb.entityManager;
    
    public static final List<String> GeoportalServicioWeb.fieldNames4OrderClauseFilter = java.util.Arrays.asList("geoportal", "servicioWeb", "opacidad", "activo", "habilitado", "posicion");
    
    public static final EntityManager GeoportalServicioWeb.entityManager() {
        EntityManager em = new GeoportalServicioWeb().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long GeoportalServicioWeb.countGeoportalServicioWebs() {
        return entityManager().createQuery("SELECT COUNT(o) FROM GeoportalServicioWeb o", Long.class).getSingleResult();
    }
    
    public static List<GeoportalServicioWeb> GeoportalServicioWeb.findAllGeoportalServicioWebs() {
        return entityManager().createQuery("SELECT o FROM GeoportalServicioWeb o", GeoportalServicioWeb.class).getResultList();
    }
    
    public static List<GeoportalServicioWeb> GeoportalServicioWeb.findAllGeoportalServicioWebs(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM GeoportalServicioWeb o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, GeoportalServicioWeb.class).getResultList();
    }
    
    public static GeoportalServicioWeb GeoportalServicioWeb.findGeoportalServicioWeb(Long id) {
        if (id == null) return null;
        return entityManager().find(GeoportalServicioWeb.class, id);
    }
    
    public static List<GeoportalServicioWeb> GeoportalServicioWeb.findGeoportalServicioWebEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM GeoportalServicioWeb o", GeoportalServicioWeb.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<GeoportalServicioWeb> GeoportalServicioWeb.findGeoportalServicioWebEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM GeoportalServicioWeb o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, GeoportalServicioWeb.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public void GeoportalServicioWeb.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void GeoportalServicioWeb.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            GeoportalServicioWeb attached = GeoportalServicioWeb.findGeoportalServicioWeb(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void GeoportalServicioWeb.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void GeoportalServicioWeb.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public GeoportalServicioWeb GeoportalServicioWeb.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        GeoportalServicioWeb merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
