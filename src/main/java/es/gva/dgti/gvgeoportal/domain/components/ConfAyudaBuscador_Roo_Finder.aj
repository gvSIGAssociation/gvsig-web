// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.gva.dgti.gvgeoportal.domain.components;

import es.gva.dgti.gvgeoportal.domain.GeoPortal;
import es.gva.dgti.gvgeoportal.domain.components.ConfAyudaBuscador;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect ConfAyudaBuscador_Roo_Finder {
    
    public static Long ConfAyudaBuscador.countFindConfAyudaBuscadorsByGeoPortal(GeoPortal geoPortal) {
        if (geoPortal == null) throw new IllegalArgumentException("The geoPortal argument is required");
        EntityManager em = ConfAyudaBuscador.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM ConfAyudaBuscador AS o WHERE o.geoPortal = :geoPortal", Long.class);
        q.setParameter("geoPortal", geoPortal);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<ConfAyudaBuscador> ConfAyudaBuscador.findConfAyudaBuscadorsByGeoPortal(GeoPortal geoPortal) {
        if (geoPortal == null) throw new IllegalArgumentException("The geoPortal argument is required");
        EntityManager em = ConfAyudaBuscador.entityManager();
        TypedQuery<ConfAyudaBuscador> q = em.createQuery("SELECT o FROM ConfAyudaBuscador AS o WHERE o.geoPortal = :geoPortal", ConfAyudaBuscador.class);
        q.setParameter("geoPortal", geoPortal);
        return q;
    }
    
    public static TypedQuery<ConfAyudaBuscador> ConfAyudaBuscador.findConfAyudaBuscadorsByGeoPortal(GeoPortal geoPortal, String sortFieldName, String sortOrder) {
        if (geoPortal == null) throw new IllegalArgumentException("The geoPortal argument is required");
        EntityManager em = ConfAyudaBuscador.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM ConfAyudaBuscador AS o WHERE o.geoPortal = :geoPortal");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<ConfAyudaBuscador> q = em.createQuery(queryBuilder.toString(), ConfAyudaBuscador.class);
        q.setParameter("geoPortal", geoPortal);
        return q;
    }
    
}
