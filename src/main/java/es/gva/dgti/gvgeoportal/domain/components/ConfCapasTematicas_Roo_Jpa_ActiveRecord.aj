// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.gva.dgti.gvgeoportal.domain.components;

import es.gva.dgti.gvgeoportal.domain.components.ConfCapasTematicas;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ConfCapasTematicas_Roo_Jpa_ActiveRecord {
    
    public static final List<String> ConfCapasTematicas.fieldNames4OrderClauseFilter = java.util.Arrays.asList("nombre", "grupo", "logo", "logoString");
    
    public static long ConfCapasTematicas.countConfCapasTematicases() {
        return entityManager().createQuery("SELECT COUNT(o) FROM ConfCapasTematicas o", Long.class).getSingleResult();
    }
    
    public static List<ConfCapasTematicas> ConfCapasTematicas.findAllConfCapasTematicases() {
        return entityManager().createQuery("SELECT o FROM ConfCapasTematicas o", ConfCapasTematicas.class).getResultList();
    }
    
    public static List<ConfCapasTematicas> ConfCapasTematicas.findAllConfCapasTematicases(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM ConfCapasTematicas o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, ConfCapasTematicas.class).getResultList();
    }
    
    public static ConfCapasTematicas ConfCapasTematicas.findConfCapasTematicas(Long id) {
        if (id == null) return null;
        return entityManager().find(ConfCapasTematicas.class, id);
    }
    
    public static List<ConfCapasTematicas> ConfCapasTematicas.findConfCapasTematicasEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM ConfCapasTematicas o", ConfCapasTematicas.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<ConfCapasTematicas> ConfCapasTematicas.findConfCapasTematicasEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM ConfCapasTematicas o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, ConfCapasTematicas.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public ConfCapasTematicas ConfCapasTematicas.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        ConfCapasTematicas merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
